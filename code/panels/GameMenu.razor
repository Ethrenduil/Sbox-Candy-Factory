@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@using Sandbox.Network;
@using Sandbox.Diagnostics;
@using System;
@using System.Collections.Generic;
@using System.Diagnostics
@using System.Linq;
@using Sandbox.Services
@inherits PanelComponent;
@implements Component.INetworkListener;

@attribute [StyleSheet]

<root>
	<img src="textures\ui\menu\menuBackground.jpg" class="background" alt=""/>
	<div class="content">
		<img src="textures\ui\menu\logo.png" class="logo" alt=""/>
		@if ( _isContentVisible ) {
			<a class="btn create" onclick="@CreateRoom">
				<h1 class="btn-txt">Create a Room</h1>
			</a>
			<a class="btn join" onclick="@DisplayJoinRoom">
				<h1 class="btn-txt">Join a Room</h1>
			</a>
			<a class="btn credits" onclick="@DisplayCredits">
                <h1 class="btn-txt">Credits</h1>
            </a>
			<a class="btn quit" onclick="@QuitGame">
				<h1 class="btn-txt">Quit</h1>
			</a>
		} else if ( _isCreditsVisible ) {
            <div class="creditsPage">
                <h1>Credits</h1>
                <p><a href="https://www.freepik.com/free-vector/3d-cartoon-style-stack-of-money-and-gold-coins-icon-coins-with-dollar-sign-money-bundle-flat-vector-illustration-wealth-investment-success-saving-profit-concept_12884267.htm#page=1&query=3d%20cartoon%20style%20stack%20of%20money%20and%20gold%20coins%20icon.%20coins%20with%20dollar%20sign,%20money%20bundle,%20flat%20vector%20illustration.%20wealth,%20investment,%20success,%20saving,%20profit%20concept&position=0"> Image from pch.vector</a> on Freepik</p>
                <p>Delivery Car : <a href="https://sketchfab.com/3d-models/delivery-truck-1d53f7fa474849db812102dfa5d070d0">Sketchfab</a></p>
                <p>Button sound : <a href="https://pixabay.com/sound-effects/button-124476/">Pixabay</a></p>
                <p><a href="https://fr.freepik.com/photos-gratuite/cent-dollars-billets-fond-blanc_1012620.htm#query=billets%20dollars&position=25&from_view=keyword&track=ais&uuid=151c4aa3-801c-4ab6-8539-9b48a7506713"> Image from jannoon028</a> on Freepik</p>
                <p>Selling sound Effect from <a href="https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=music&utm_content=87313">Pixabay</a></p>
                <p>Car sound Effect from <a href="https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=music&utm_content=6188">Pixabay</a></p>
				<p>The project use AI for the voice. Check <a href="https://elevenlabs.io">ElevenLabs</a></p>
			</div>
            <a class="btn back">
                <h1 class="btn-txt" onclick="@DisplayContent">Back</h1>
            </a>
        } else if ( _isJoinRoomVisible ) {
			<div class="display-list lobby-list">
				<div class="header">
					<div class="title">Server List</div>
				</div>
				<div class="content-list">
					@if (refreshing) {
						<div class="status-info">Refreshing..</div>
					} else if (list.Count == 0) {
						<div class="status-info">No lobbies were found</div>
					} else {
						@foreach (var lobby in list) {
							<div class="btn-lobby" onclick=@(() => OpenLobby( lobby ) )>
								<div class="title">
									<p>@lobby.Name</p>
								</div>
								<div class="meta">
									<div class="count">
										<p>@lobby.Members/4</p>
									</div>
								</div>
							</div>
						}
					}
				</div>
			</div>
			<a class="btn refresh-join" onclick="@RefreshLobbyList">
				<h1 class="btn-txt refresh">Refresh</h1>
			</a>
			<a class="btn back">
				<h1 class="btn-txt" onclick="@DisplayContent">Back</h1>
			</a>
		}
	</div>
</root>

@code {
	private bool _isContentVisible = true;
	private bool _isJoinRoomVisible = false;
    private bool _isCreditsVisible = false;
	bool refreshing;
	List<LobbyInformation> list = new();
	[Property] public SoundEvent buttonClickSound { get; set; }
	[Property] public Settings settings { get; set; }

	protected override void OnStart()
	{
		base.OnStart();
		settings = GameObject.Components.Get<Settings>();
	}


	void DisplayContent()
	{
		PlaySound();
		_isContentVisible = true;
		_isJoinRoomVisible = false;
	}

	void DisplayCredits()
    {
        PlaySound();
        _isContentVisible = false;
        _isCreditsVisible = true;
        StateHasChanged();
    }

	void DisplayJoinRoom()
	{
		RefreshLobbyList();
		PlaySound();
		_isContentVisible = false;
		_isJoinRoomVisible = true;
	}

	void CreateRoom()
	{
		PlaySound();
		Game.ActiveScene.LoadFromFile("scenes/candy_factory.scene");
		GameNetworkSystem.CreateLobby();
	}

	async void RefreshLobbyList()
	{
		PlaySound();
		StateHasChanged();
		refreshing = true;
		list = await Networking.QueryLobbies();
		refreshing = false;
		StateHasChanged();
	}
	
	void OpenLobby(LobbyInformation lobby)
	{
		PlaySound();
		if (lobby.Members >= 4) return;
		GameNetworkSystem.Connect(lobby.LobbyId);
		Game.ActiveScene.LoadFromFile("scenes/candy_factory.scene");
	}

	void QuitGame()
	{
		PlaySound();
		Game.Close();
	}

	void PlaySound()
	{
		buttonClickSound.Volume = settings.GetVolume(VolumeType.Sound) / 1000;
		buttonClickSound.UI = true;
		Sound.Play(buttonClickSound);
	}

	public string GetVolumeSettings()
	{
		return settings.GetVolume(VolumeType.Music).ToString();
	}

	public void AdjustVolume(PanelEvent e)
	{
		PlaySound();
		// Get element value
		var sign = e.This.StringValue == "-" ? -1 : 1;
		var wishQuantity = settings.GetVolume(VolumeType.Music) + sign * 5;
		// Check if the quantity is valid
		if (wishQuantity <= 0) wishQuantity = 0;
		if (wishQuantity >= 100) wishQuantity = 100;

		// Set the new value
		settings.SetVolume(VolumeType.Music, wishQuantity);
		// Update the UI
		StateHasChanged();
	}
}
